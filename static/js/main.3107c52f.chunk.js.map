{"version":3,"sources":["api/api.js","components/Card/Card.jsx","components/Loader/Loader.jsx","components/SelectedCard/SelectedCard.jsx","components/CardsList/CardsList.jsx","components/Select/Select.jsx","App.jsx","index.js"],"names":["request","url","a","fetch","response","ok","Error","status","statusText","json","getDate","count","data","Promise","all","results","map","item","itemInfo","name","id","type","types","result","getTypes","getPokemon","Card","React","memo","detCardId","className","onClick","onKeyPress","role","tabIndex","src","alt","toUpperCase","slice","propTypes","PropTypes","string","isRequired","number","func","arrayOf","shape","Loader","SelectedCard","pokemonId","onClose","useState","pokemon","setPokemon","useEffect","loadPokemonById","loadetPokemon","String","replace","attack","stats","base_stat","defense","hp","spAttack","spDefense","speed","weight","totalMoves","moves","length","cellSpacing","CardsList","pokemonsList","onLoadButton","isLoading","setPokemonId","handleCardId","cardId","propTyped","object","bool","Select","onSelect","setTypes","loadTypes","loadedTypes","onChange","value","App","pokemons","setPokemons","setCount","loader","setLoader","select","setSelect","isSelected","setIsSelected","loadDate","dataFromServer","sortedPokemons","useMemo","filter","some","target","ReactDOM","render","document","getElementById"],"mappings":"sVAAMA,G,MAAO,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACSC,MAAM,GAAD,OAAIF,IADlB,WACRG,EADQ,QAGAC,GAHA,sBAIN,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,eAAmCH,EAASI,aAJtC,gCAOPJ,EAASK,QAPF,2CAAH,uDAUAC,EAAO,uCAAG,WAAMC,GAAN,iBAAAT,EAAA,sEACFF,EAAQ,sDAAD,OACsC,GAARW,IAFnC,cACfC,EADe,gBAKAC,QAAQC,IAC3BF,EAAKG,QAAQC,IAAb,uCAAiB,WAAMC,GAAN,eAAAf,EAAA,sEACQF,EAAQiB,EAAKhB,KADrB,cACTiB,EADS,yBAGR,CACLC,KAAMD,EAASC,KACfC,GAAIF,EAASE,GACbC,KAAMH,EAASI,QANF,2CAAjB,wDANmB,cAKfC,EALe,yBAiBdA,GAjBc,2CAAH,sDAoBPC,EAAQ,uCAAG,4BAAAtB,EAAA,sEACFF,EAAQ,4CADN,cAChBsB,EADgB,yBAGfA,EAAMP,SAHS,2CAAH,qDAMRU,EAAU,uCAAG,WAAML,GAAN,eAAAlB,EAAA,sEACJF,EAAQ,qCAAD,OAAsCoB,IADzC,cAClBE,EADkB,yBAGjBA,GAHiB,2CAAH,sD,qCC/BVI,EAAOC,IAAMC,MACxB,gBAAGT,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIE,EAAb,EAAaA,MAAOO,EAApB,EAAoBA,UAApB,OACE,sBACEC,UAAU,OACVC,QAAS,kBAAMF,EAAUT,IACzBY,WAAY,kBAAMH,EAAUT,IAC5Ba,KAAK,SACLC,SAAS,IALX,UAOE,qBACEJ,UAAU,cACVK,IAAG,wDAAmDf,EAAnD,QACHgB,IAAG,kBAAajB,KAElB,mBAAGW,UAAU,aAAb,SAA2BX,EAAK,GAAGkB,cAAgBlB,EAAKmB,MAAM,KAC9D,qBAAKR,UAAU,cAAf,SACGR,EAAMN,KAAI,SAAAC,GAAI,OACb,qBAEEa,UAAS,iCAA4Bb,EAAKI,KAAKF,MAFjD,SAIGF,EAAKI,KAAKF,KAAK,GAAGkB,cAAgBpB,EAAKI,KAAKF,KAAKmB,MAAM,IAHnDrB,EAAKI,KAAKpB,gBAY3ByB,EAAKa,UAAY,CACfpB,KAAMqB,IAAUC,OAAOC,WACvBtB,GAAIoB,IAAUG,OAAOD,WACrBb,UAAWW,IAAUI,KAAKF,WAC1BpB,MAAOkB,IAAUK,QACfL,IAAUM,MAAM,CACdzB,KAAMmB,IAAUM,MAAM,CACpB3B,KAAMqB,IAAUC,OAAOC,WACvBzC,IAAKuC,IAAUC,OAAOC,aACrBA,aACFA,YACHA,Y,UC3CSK,EAAS,kBACpB,qBAAKjB,UAAU,SAAf,SACE,qBAAKA,UAAU,uBCANkB,G,MAAerB,IAAMC,MAChC,YAA6B,IAA1BqB,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAAc,EACIC,mBAAS,IADb,mBACnBC,EADmB,KACVC,EADU,KAG1BC,qBAAU,WACRC,MACC,CAACN,IAEJ,IAAMM,EAAe,uCAAG,4BAAArD,EAAA,sEACMuB,EAAWwB,GADjB,OAChBO,EADgB,OAEF,CAClBnC,KAAMmC,EAAclC,MAAM,GAAGD,KAAKF,KAAK,GAAGkB,cACtCmB,EAAclC,MAAM,GAAGD,KAAKF,KAAKmB,MAAM,GAC3CnB,KAAMqC,EAAcrC,KAAK,GAAGkB,cACxBmB,EAAcrC,KAAKmB,MAAM,GAC7BlB,GAAIqC,OAAOD,EAAcpC,GAAK,KAAKsC,QAAQ,IAAK,IAChDC,OAAQH,EAAcI,MAAM,GAAGC,UAC/BC,QAASN,EAAcI,MAAM,GAAGC,UAChCE,GAAIP,EAAcI,MAAM,GAAGC,UAC3BG,SAAUR,EAAcI,MAAM,GAAGC,UACjCI,UAAWT,EAAcI,MAAM,GAAGC,UAClCK,MAAOV,EAAcI,MAAM,GAAGC,UAC9BM,OAAQX,EAAcW,OACtBC,WAAYZ,EAAca,MAAMC,QAGlCjB,EAAWJ,EAAW,OAlBA,2CAAH,qDAqBrB,OACE,sBACEnB,UAAU,eACVC,QAASmB,EACTjB,KAAK,SACLD,WAAYkB,EACZhB,SAAS,IALX,UAOE,qBACEJ,UAAU,sBACVK,IAAG,wDAAmDc,EAAnD,QACHb,IAAI,mBAEN,oBAAIN,UAAU,qBAAd,mBACMsB,EAAQjC,KADd,aACuBiC,EAAQhC,MAE/B,wBACEmD,YAAY,IACZzC,UAAU,4BAFZ,UAIE,+BACE,oBAAIA,UAAU,qCAAd,kBACA,oBAAIA,UAAU,oCAAd,SACGsB,EAAQ/B,UAGb,+BACE,oBAAIS,UAAU,qCAAd,oBACA,oBAAIA,UAAU,oCAAd,SACGsB,EAAQO,YAGb,+BACE,oBAAI7B,UAAU,qCAAd,qBACA,oBAAIA,UAAU,oCAAd,SACGsB,EAAQU,aAGb,+BACE,oBAAIhC,UAAU,qCAAd,gBACA,oBAAIA,UAAU,oCAAd,SACGsB,EAAQW,QAGb,+BACE,oBAAIjC,UAAU,qCAAd,uBACA,oBAAIA,UAAU,oCAAd,SACGsB,EAAQY,cAGb,+BACE,oBAAIlC,UAAU,qCAAd,wBACA,oBAAIA,UAAU,oCAAd,SACGsB,EAAQa,eAGb,+BACE,oBAAInC,UAAU,qCAAd,mBACA,oBAAIA,UAAU,oCAAd,SACGsB,EAAQc,WAGb,+BACE,oBAAIpC,UAAU,qCAAd,oBACA,oBAAIA,UAAU,oCAAd,SACGsB,EAAQe,YAGb,+BACE,oBAAIrC,UAAU,qCAAd,yBACA,oBAAIA,UAAU,oCAAd,SACGsB,EAAQgB,0BClGVI,EAAY,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAAgB,EACpCxB,mBAAS,MAD2B,mBAC/DF,EAD+D,KACpD2B,EADoD,KAGhEC,EAAe,SAACC,GAOpBF,EANI3B,IAAc6B,EAMLA,EALE,OAYjB,OACE,sBAAKhD,UAAU,QAAf,UACGmB,GACE,cAAC,EAAD,CAAcA,UAAWA,EAAWC,QAPzB,WAChB0B,EAAa,SAOX,qBAAK9C,UAAU,cAAf,SACG2C,EAAazD,KAAI,SAAAoC,GAAO,OACvB,cAAC,EAAD,CAEEjC,KAAMiC,EAAQjC,KACdC,GAAIgC,EAAQhC,GACZE,MAAO8B,EAAQ/B,KACfQ,UAAWgD,GAJNzB,EAAQhC,SAQnB,wBACEU,UAAU,gBACVT,KAAK,SACLU,QAAS2C,EAHX,SAKGC,EACG,cAAC,EAAD,IACA,kBAOZH,EAAUO,UAAY,CACpBN,aAAcjC,IAAUK,QAAQL,IAAUwC,QAAQtC,WAClDgC,aAAclC,IAAUI,KAAKF,WAC7BiC,UAAWnC,IAAUyC,KAAKvC,Y,UCnDfwC,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZhC,mBAAS,IADG,mBAC/B7B,EAD+B,KACxB8D,EADwB,KAGtC9B,qBAAU,WACR+B,MACC,IAEH,IAAMA,EAAS,uCAAG,4BAAAnF,EAAA,sEACUsB,IADV,OACV8D,EADU,OAGhBF,EAASE,GAHO,2CAAH,qDAMf,OACE,yBACExD,UAAU,SACVyD,SAAUJ,EAFZ,UAIE,wBAAQK,MAAM,MAAd,iBACClE,EAAMN,KAAI,SAAAK,GAAI,OACb,wBACEmE,MAAOnE,EAAKF,KADd,SAIGE,EAAKF,MAFDE,EAAKpB,YCqCLwF,MA1Df,WAAgB,IAAD,EACmBtC,mBAAS,IAD5B,mBACNuC,EADM,KACIC,EADJ,OAEaxC,mBAAS,GAFtB,mBAENxC,EAFM,KAECiF,EAFD,OAGezC,oBAAS,GAHxB,mBAGN0C,EAHM,KAGEC,EAHF,OAIe3C,mBAAS,OAJxB,mBAIN4C,EAJM,KAIEC,EAJF,OAKuB7C,oBAAS,GALhC,mBAKN8C,EALM,KAKMC,EALN,KAOb5C,qBAAU,WACR6C,IACAL,GAAU,KACT,CAACnF,IAEJ,IAKMwF,EAAQ,uCAAG,4BAAAjG,EAAA,sEACcQ,EAAQC,GADtB,OACTyF,EADS,OAGfN,GAAU,GACVH,EAAY,GAAD,mBACND,GADM,YAENU,KANU,2CAAH,qDAeRC,EAAiBC,mBAAQ,WAC7B,MAAe,QAAXP,EACKL,EAGFA,EAASa,QAAO,SAAAnD,GAAO,OAC5BA,EAAQ/B,KAAKmF,MAAK,SAAAvF,GAAI,OAAIA,EAAKI,KAAKF,OAAS4E,UAE9C,CAACA,IAEJ,OACE,sBAAKjE,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,qBACA,cAAC,EAAD,CAAQqD,SAlBS,SAAC,GAAgB,IAAdsB,EAAa,EAAbA,OACtBP,GAAc,GACdF,EAAUS,EAAOjB,UAiBf,sBAAK1D,UAAU,YAAf,UACE,cAAC,EAAD,CACE2C,aAAewB,EAAwBI,EAAXX,EAC5BhB,aArCO,WACbkB,EAASjF,EAAQ,GACjBuF,GAAc,IAoCRvB,UAAWkB,IAEb,qBAAK/D,UAAU,yBCrDvB4E,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3107c52f.chunk.js","sourcesContent":["const request = async(url) => {\n  const response = await fetch(`${url}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} -- ${response.statusText}`);\n  }\n\n  return response.json();\n};\n\nexport const getDate = async(count) => {\n  const data = await request(\n    `https://pokeapi.co/api/v2/pokemon/?limit=12&offset=${count * 12}`,\n  );\n\n  const result = await Promise.all(\n    data.results.map(async(item) => {\n      const itemInfo = await request(item.url);\n\n      return {\n        name: itemInfo.name,\n        id: itemInfo.id,\n        type: itemInfo.types,\n      };\n    }),\n  );\n\n  return result;\n};\n\nexport const getTypes = async() => {\n  const types = await request('https://pokeapi.co/api/v2/type?limit=999');\n\n  return types.results;\n};\n\nexport const getPokemon = async(id) => {\n  const types = await request(`https://pokeapi.co/api/v2/pokemon/${id}`);\n\n  return types;\n};\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Card.scss';\n\nexport const Card = React.memo(\n  ({ name, id, types, detCardId }) => (\n    <div\n      className=\"card\"\n      onClick={() => detCardId(id)}\n      onKeyPress={() => detCardId(id)}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <img\n        className=\"card__image\"\n        src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\n        alt={`a pict. ${name}`}\n      />\n      <p className=\"card__name\">{name[0].toUpperCase() + name.slice(1)}</p>\n      <div className=\"card__types\">\n        {types.map(item => (\n          <div\n            key={item.type.url}\n            className={`card__type card__type--${item.type.name}`}\n          >\n            {item.type.name[0].toUpperCase() + item.type.name.slice(1)}\n          </div>\n        ))}\n      </div>\n      \n    </div>\n  ),\n);\n\nCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  detCardId: PropTypes.func.isRequired,\n  types: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './SelectedCard.scss';\nimport { getPokemon } from '../../api/api';\n\nexport const SelectedCard = React.memo(\n  ({ pokemonId, onClose }) => {\n    const [pokemon, setPokemon] = useState([]);\n  \n    useEffect(() => {\n      loadPokemonById();\n    }, [pokemonId]);\n  \n    const loadPokemonById = async() => {\n      const loadetPokemon = await getPokemon(pokemonId);\n      const pokemonInfo = {\n        type: loadetPokemon.types[0].type.name[0].toUpperCase()\n          + loadetPokemon.types[0].type.name.slice(1),\n        name: loadetPokemon.name[0].toUpperCase()\n          + loadetPokemon.name.slice(1),\n        id: String(loadetPokemon.id / 100).replace('.', ''),\n        attack: loadetPokemon.stats[1].base_stat,\n        defense: loadetPokemon.stats[2].base_stat,\n        hp: loadetPokemon.stats[0].base_stat,\n        spAttack: loadetPokemon.stats[3].base_stat,\n        spDefense: loadetPokemon.stats[4].base_stat,\n        speed: loadetPokemon.stats[5].base_stat,\n        weight: loadetPokemon.weight,\n        totalMoves: loadetPokemon.moves.length,\n      };\n\n      setPokemon(pokemonId, 'sss');\n    };\n  \n    return (\n      <div\n        className=\"selectedCard\"\n        onClick={onClose}\n        role=\"button\"\n        onKeyPress={onClose}\n        tabIndex=\"0\"\n      >\n        <img\n          className=\"selectedCard__image\"\n          src={`https://pokeres.bastionbot.org/images/pokemon/${pokemonId}.png`}\n          alt=\"pokemon's foto\"\n        />\n        <h2 className=\"selectedCard__name\">\n          {`${pokemon.name} #${pokemon.id}`}\n        </h2>\n        <table\n          cellSpacing=\"0\"\n          className=\"selectedCard__description\"\n        >\n          <tr>\n            <td className=\"selectedCard__description--columnL\">Type</td>\n            <td className=\"selectedCard__description--column\">\n              {pokemon.type}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"selectedCard__description--columnL\">Attack</td>\n            <td className=\"selectedCard__description--column\">\n              {pokemon.attack}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"selectedCard__description--columnL\">Defense</td>\n            <td className=\"selectedCard__description--column\">\n              {pokemon.defense}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"selectedCard__description--columnL\">HP</td>\n            <td className=\"selectedCard__description--column\">\n              {pokemon.hp}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"selectedCard__description--columnL\">SP attack</td>\n            <td className=\"selectedCard__description--column\">\n              {pokemon.spAttack}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"selectedCard__description--columnL\">SP defense</td>\n            <td className=\"selectedCard__description--column\">\n              {pokemon.spDefense}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"selectedCard__description--columnL\">Speed</td>\n            <td className=\"selectedCard__description--column\">\n              {pokemon.speed}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"selectedCard__description--columnL\">Weight</td>\n            <td className=\"selectedCard__description--column\">\n              {pokemon.weight}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"selectedCard__description--columnL\">Total moves</td>\n            <td className=\"selectedCard__description--column\">\n              {pokemon.totalMoves}\n            </td>\n          </tr>\n        </table>\n      </div>\n    );\n  },\n);\n\nSelectedCard.propTypes = {\n  pokemonId: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './CardsList.scss';\nimport { Card } from '../Card';\nimport { Loader } from '../Loader';\nimport { SelectedCard } from '../SelectedCard';\n\nexport const CardsList = ({ pokemonsList, onLoadButton, isLoading }) => {\n  const [pokemonId, setPokemonId] = useState(null);\n\n  const handleCardId = (cardId) => {\n    if (pokemonId === cardId) {\n      setPokemonId(null);\n\n      return;\n    }\n\n    setPokemonId(cardId);\n  };\n\n  const outSelect = () => {\n    setPokemonId(null);\n  };\n\n  return (\n    <div className=\"cards\">\n      {pokemonId\n      && <SelectedCard pokemonId={pokemonId} onClose={outSelect} />}\n      <div className=\"cards__list\">\n        {pokemonsList.map(pokemon => (\n          <Card\n            key={pokemon.id}\n            name={pokemon.name}\n            id={pokemon.id}\n            types={pokemon.type}\n            detCardId={handleCardId}\n          />\n        ))}\n      </div>\n      <button\n        className=\"cards__button\"\n        type=\"button\"\n        onClick={onLoadButton}\n      >\n        {isLoading\n          ? <Loader />\n          : 'Load More'\n        }\n      </button>\n    </div>\n  );\n};\n\nCardsList.propTyped = {\n  pokemonsList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onLoadButton: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './Select.scss';\nimport { getTypes } from '../../api/api';\n\nexport const Select = ({ onSelect }) => {\n  const [types, setTypes] = useState([]);\n\n  useEffect(() => {\n    loadTypes();\n  }, []);\n\n  const loadTypes = async() => {\n    const loadedTypes = await getTypes();\n\n    setTypes(loadedTypes);\n  };\n\n  return (\n    <select\n      className=\"select\"\n      onChange={onSelect}\n    >\n      <option value=\"all\">all</option>\n      {types.map(type => (\n        <option\n          value={type.name}\n          key={type.url}\n        >\n          {type.name}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState, useMemo } from 'react';\nimport './App.scss';\nimport { getDate } from './api/api';\nimport { CardsList } from './components/CardsList';\nimport { Select } from './components/Select';\n\nfunction App() {\n  const [pokemons, setPokemons] = useState([]);\n  const [count, setCount] = useState(0);\n  const [loader, setLoader] = useState(false);\n  const [select, setSelect] = useState('all');\n  const [isSelected, setIsSelected] = useState(false);\n\n  useEffect(() => {\n    loadDate();\n    setLoader(true);\n  }, [count]);\n\n  const onload = () => {\n    setCount(count + 1);\n    setIsSelected(false);\n  };\n\n  const loadDate = async() => {\n    const dataFromServer = await getDate(count);\n\n    setLoader(false);\n    setPokemons([\n      ...pokemons,\n      ...dataFromServer,\n    ]);\n  };\n\n  const handleSelect = ({ target }) => {\n    setIsSelected(true);\n    setSelect(target.value);\n  };\n\n  const sortedPokemons = useMemo(() => {\n    if (select === 'all') {\n      return pokemons;\n    }\n\n    return pokemons.filter(pokemon => (\n      pokemon.type.some(item => item.type.name === select)\n    ));\n  }, [select]);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Pokedex</h1>\n      <Select onSelect={handleSelect} />\n      <div className=\"App__main\">\n        <CardsList\n          pokemonsList={!isSelected ? pokemons : sortedPokemons}\n          onLoadButton={onload}\n          isLoading={loader}\n        />\n        <div className=\"App__leftFild\" />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}